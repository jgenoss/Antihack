<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AA//AAAf/4AAf//gAf//+AP///4H/w==
</value>
  </data>
</root>